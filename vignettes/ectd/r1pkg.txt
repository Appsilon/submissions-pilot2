# Generated by pkglite: do not edit by hand
# Use pkglite::unpack() to restore the packages

Package: pilot2wrappers
File: .Rbuildignore
Format: text
Content:
  ^renv$
  ^renv\.lock$
  ^.*\.Rproj$
  ^\.Rproj\.user$
  ^pilot1wrappers\.Rcheck$
  ^pilot1wrappers.*\.tar\.gz$
  ^pilot1wrappers.*\.tgz$
  ^_pkgdown\.yml$
  ^docs$
  ^pkgdown$
  ^LICENSE.md$
  ^output$
  ^readme.md$
  ^adam$
  ^vignettes$
  ^\.github$
  ^data-raw$
  dev_history.R
  ^dev$
  $run_dev.*
  ^.devcontainer$
  ^app\.R$
  ^rsconnect$
  ^LICENSE\.md$

Package: pilot2wrappers
File: .Rprofile
Format: text
Content:
  source("renv/activate.R")

Package: pilot2wrappers
File: DESCRIPTION
Format: text
Content:
  Package: pilot2wrappers
  Type: Package
  Title: R Consortium R Submission Pilot 2
  Version: 0.2.0
  Authors@R: c(
          person("Eric", "Nantz", email = "theRcast@gmail.com", role = c("aut", "cre")),
          person("Yilong", "Zhang", role = c("aut")),
          person("Heng", "Wang", role = c("aut")),
          person("Gregory", "Chen", role = c("aut")),
          person("Eli", "Miller", role = c("aut")),
          person("Ning", "Leng", role = c("aut")),
          person("copyright", role = c("cph"))
         )
  Description: Insert Package Description. 
  Depends: R (>= 3.6.0)
  License: GPL (>= 3)
  Imports: 
      config (>= 0.3.1),
      golem (>= 0.3.1),
      teal,
      teal.data,
      shiny (>= 1.7.1),
      rtables,
      haven,
      dplyr,
      Tplyr,
      tidyr,
      glue,
      stringr,
      huxtable,
      ggplot2,
      cowplot,
      visR,
      emmeans,
      reactable,
      magrittr,
      tibble,
      utils,
      htmltools,
      pkgload,
      tippy,
      markdown
  Suggests: 
      devtools,
      testthat,
      knitr,
      rmarkdown,
      covr
  Encoding: UTF-8
  LazyData: true
  Roxygen: list(markdown = TRUE)  
  Rmarkdwon: echo = TRUE
  RoxygenNote: 7.1.2
  VignetteBuilder: knitr

Package: pilot2wrappers
File: NAMESPACE
Format: text
Content:
  # Generated by roxygen2: do not edit by hand
  
  export("%>%")
  export(efficacy_models)
  export(fmt_ci)
  export(fmt_est)
  export(fmt_num)
  export(fmt_pval)
  export(nest_rowlabels)
  export(num_fmt)
  export(pad_row)
  export(run_app)
  export(tooltip_text)
  import(Tplyr)
  import(ggplot2)
  import(rtables)
  import(tippy)
  importFrom(dplyr,across)
  importFrom(dplyr,arrange)
  importFrom(dplyr,bind_rows)
  importFrom(dplyr,case_when)
  importFrom(dplyr,distinct)
  importFrom(dplyr,filter)
  importFrom(dplyr,group_by)
  importFrom(dplyr,mutate)
  importFrom(dplyr,n)
  importFrom(dplyr,rename)
  importFrom(dplyr,rowwise)
  importFrom(dplyr,select)
  importFrom(dplyr,starts_with)
  importFrom(dplyr,summarise)
  importFrom(glue,glue)
  importFrom(golem,with_golem_options)
  importFrom(graphics,pairs)
  importFrom(magrittr,"%>%")
  importFrom(reactable,colDef)
  importFrom(reactable,colGroup)
  importFrom(reactable,reactable)
  importFrom(reactable,renderReactable)
  importFrom(shiny,NS)
  importFrom(shiny,column)
  importFrom(shiny,fluidPage)
  importFrom(shiny,fluidRow)
  importFrom(shiny,h4)
  importFrom(shiny,h6)
  importFrom(shiny,plotOutput)
  importFrom(shiny,reactive)
  importFrom(shiny,renderPlot)
  importFrom(shiny,renderUI)
  importFrom(shiny,shinyApp)
  importFrom(shiny,tagList)
  importFrom(shiny,tags)
  importFrom(shiny,uiOutput)
  importFrom(stats,confint)
  importFrom(stats,drop1)
  importFrom(stats,lm)
  importFrom(stats,median)
  importFrom(stats,sd)
  importFrom(stringr,str_pad)
  importFrom(teal,init)
  importFrom(teal,module)
  importFrom(teal,modules)
  importFrom(tidyr,pivot_longer)
  importFrom(tidyr,replace_na)

Package: pilot2wrappers
File: NEWS.md
Format: text
Content:
  # pilot2 0.2.0
  
  - Convert Shiny application to a package structure using [`{golem}`](https://thinkr-open.github.io/golem).
  - Incorporate the open-source [`{teal}`](https://insightsengineering.github.io/teal/main) package inside application to provide dynamic filters in all modules
  
  # pilot2 0.1.0
  
  - Initial version.
  - Added a `NEWS.md` file to track changes to the package.

Package: pilot2wrappers
File: README.md
Format: text
Content:
  ---
  output:
    html_document: default
    pdf_document: default
  ---
  <!-- badges: start -->
  
  [![R-CMD-check](https://github.com/RConsortium/submissions-pilot2/workflows/R-CMD-check/badge.svg)](https://rconsortium.github.io/submissions-pilot2/)
  <!-- badges: end -->
  
  ## Overview
  
  ## Meeting Minutes
  [Repo wiki](https://github.com/RConsortium/submissions-pilot2/wiki)
  
  
  ## Installing `teal` :
  Follow the link [here](https://github.com/insightsengineering/depository#readme)
  
  ## Running application
  
  More instructions to come, but you can run the app by doing the following:
  
  * Clone this repository to your local machine
  * Open the project within RStudio, and run `renv::restore()` if prompted to restore the `{renv}` package library
  * Open the `app.R` script and run the application within RStudio by clicking the Run App button

Package: pilot2wrappers
File: inst/app/docs/about.md
Format: text
Content:
  ## Introduction
  
  This application is intended for a pilot submission to the FDA composing of a Shiny application, as part of the [R Submissions Working Group](https://rconsortium.github.io/submissions-wg/) Pilot 2. The data sets and results displayed in the application originate from the [Pilot 1 project](https://rconsortium.github.io/submissions-wg/pilot-overall.html#pilot-1---common-analyses). Below is a brief description of the rest of the application:
  
  ### Demographic Table
  
  In this interface, summary statistics associated with baseline clinical characteristics and other demographic factors is shown.
  
  ### KM-Plot for TTDE
  
  A Kaplan-Meier (KM) plot of the Time to First Dermatologic Event (TTDE) with strata defined by treatment group is displayed along with an informative risk set table across time.
  
  ### Primary Table
  
  A summary table of the primary efficacy analysis is shown for each of the time points of assessment (baseline and week 24) comparing each treatment group. The primary efficacy variable (change from baseline in ADAS Cog (11)) was analyzed using an Analysis of Covariance (ANCOVA) model with treatment and baseline value as covariates, comparing Placebo to Xanomeline High Dose.
  
  ### Efficacy Table
  
  A summary table of an additional efficacy analysis is shown for baseline and week 20. The efficacy variable (Glucose) was analzying using ANCOVA model with treatment and baseline value as covariates, comparing Placebo to Xanomeline High Dose.

Package: pilot2wrappers
File: inst/golem-config.yml
Format: text
Content:
  default:
    golem_name: pilot2wrappers
    golem_version: 0.0.0.9000
    app_prod: no
    adam_path: "datasets/adam"
  production:
    app_prod: yes
  dev:
    golem_wd: !expr here::here()

Package: pilot2wrappers
File: inst/pkgdown/assets/readme.txt
Format: text
Content:
  do not delete. Paceholder for pkgdown

Package: pilot2wrappers
File: inst/pkgdown/templates/readme.txt
Format: text
Content:
  do not delete. Paceholder for pkgdown

Package: pilot2wrappers
File: inst/startup.R
Format: text
Content:
  # Project Level Setup
  R_version <- "4.2.0"																                  # set up project R version
  snapshot  <- "2022-02-01" 									                          # set up snapshot date
  teal_snapshot <- "2022-06-09"
  repos <- c(
    paste0("https://packagemanager.rstudio.com/cran/", snapshot), 
    paste0("https://insightsengineering.github.io/depository/", teal_snapshot)  # set up repository based on snapshot
  )
  
  home      <- normalizePath(".") # set up home directory
  while(! "DESCRIPTION" %in% list.files(home)){
          home <- dirname(home)
  }
  
  # A&R folder path (Do not edit information below)
  path <- list(home = "")
  
  path <- lapply(path, function(x) file.path(home, x))
  
  # Define repo URL for project specific package installation
  options(repos = repos)
  
  # Check R Version
  if(paste(R.version$major, R.version$minor, sep = ".") != R_version & interactive()){
   stop("The current R version is not the same with the current project in ", R_version)
  }
  
  # Repository
  message("Current project R package repository:")
  message(paste0("    ", getOption("repos")))
  message(" ")
  
  # Display R Session Status
  #message("R packages were installed from repo: ", options('repo'), "\n")
  message("Below R package path are searching in order to find installed R pacakges in this R session:", "\n",
          paste(paste0("    ", .libPaths()), collapse = "\n"))
  message("\n")
  
  message("The project home directory is ", home)
  message("\n")
  
  rm(home, R_version)

Package: pilot2wrappers
File: inst/app/www/favicon.ico
Format: binary
Content:
  0000010001001c20000001002000a80e000016000000280000001c00000040000000010020000000000000000000000000000000000000000000000000000000
  0000000000000000000000000000000000000000000000000000000000004f4238000000000000000000514439044f4135244d4038ae4c4038aa4e4135215244
  390400000000000000004f4238000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  0000000000004f4238004f4238000000000000000000564638224d3f2f7e423b3ffd2f3a69ff353f6aff463e40fb4b3d2f7c5647382100000000000000004f42
  38004f42380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f42380000000000000000005748
  3d165544307141372fdb333d68ff1f43b1ff2458f7ff3e6cf8ff4861b4ff444a68ff3d332dd95645327056483d1600000000000000004f423800000000000000
  0000000000000000000000000000000000000000000000000000000000004f42380000000000000000005646375f493a27c933354bff2646adff1e4fe3ff2257
  f8ff2155f1ff2658f2ff3767faff3762e4ff4a61adff323243ff4a3b27c85546385e00000000000000004f423800000000000000000000000000000000000000
  0000000000004f423800000000000000000052443a2b504233c5393336f821409eff284dc3ff2355eeff2255f2ff2255f1ff2255f1ff2255f1ff2255f1ff2356
  f2ff3764efff284cbeff223e95ff3c3433f8514234c55143392c00000000000000004f42380000000000000000000000000000000000000000004f42370d4f42
  3894473c34ff24326aff1d4de0ff2256f7ff2c52caff2355edff2255f1ff2255f1ff2255f1ff2255f1ff2255f1ff2255f1ff2354edff2b52cdff2257f8ff1c4b
  d9ff26325dff4a3e36ff4f4238975042370e000000000000000000000000000000004d4237124b3e315d473e3de7303451ff1f41adff2458f7ff2355f0ff2554
  e4ff3050b9ff2753deff2454e9ff2255f3ff2255f1ff2255f1ff2255f3ff2354eaff3b5bcbff5f618fff2c56ddff2255f1ff2458faff1f3d99ff32354fff493f
  3cea4b3e31604c413714000000004f42384d524237ba433e50ff1f3ea0ff2054f5ff2655e6ff2a52d3ff2a52d2ff2853daff2155f4ff2953d6ff2a52d0ff2952
  d7ff2355edff2354ecff2952d6ff2651d5ffae8968ffdea45aff6e6d98ff2550d5ff2a52d1ff2556ebff1f53f0ff203d99ff48404eff554438bf4f42384f5344
  3af48b5d54ff4a4e94ff1e57fdff2255f2ff2255f2ff2355eeff2b52d0ff2155f6ff2255f1ff2155f3ff2256f1ff2f50beff2853d9ff2853d9ff2f50bcff2154
  f1ff666fb4ff9a878dff4364dcff2950cdff2355edff2255f2ff2255f2ff1d55fbff545191ff8e5f54ff53443af255453bffaf6f67ff545295ff1e55f8ff2255
  f1ff2255f1ff2356f0ff2854ddff2256f4ff2255f1ff2255f1ff2256f4ff2a52d1ff2355eeff2355efff2b51cdff2255f2ff2455efff2d58e5ff2156f4ff2a53
  d7ff2455eeff2255f1ff2255f1ff1a50ecff5f558dffb27169ff54453bfd54453bffba776fff73597aff1b4ad5ff2256f3ff2255f3ff1d45beff303f8aff1d50
  e6ff2256f3ff2155f3ff2a52d1ff2653e0ff2255f3ff2155f3ff2852d9ff2953d5ff2155f3ff2256f3ff1d4ee1ff303d84ff204accff2255f3ff2256f4ff214a
  cdff7f5b71ffb9766fff54453bfc54453bffb87771ffb77369ff6f5167ff2c47afff474578ffa9685bffb87469ff5c4b6cff274cc5ff2d51c9ff2354ecff2255
  f2ff2255f1ff2255f1ff2155f3ff2554e6ff2c51caff284dc2ff624d69ffbb756aff9c6257ff3f4381ff2e46a8ff7a5562ffbb766dffb57570ff54453bfd5445
  3bffb77671ffb97772ffc07a72ffb06e60ffc27a70ffba7772ffbd7973ff8c5954ff2c43a2ff2154f1ff2255f2ff2255f3ff2255f2ff2155f3ff2255f3ff2255
  f2ff2054f1ff32459dff9b6156ffbb7873ffbb7873ffc1796effb36f62ffbf7a73ffb97672ffb57570ff54453bfd54453bffb77671ffb97671ffb87671ffb977
  72ffb87671ffb87671ffbb7872ff99625dff293472ff2052e9ff2255f1ff204edbff2554e2ff2653daff204eddff2255f2ff1f51e7ff323466ffb27067ffb977
  72ffb87671ffb87671ffb97772ffb87671ffb97671ffb67570ff54453bfe54453bffb77571ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffbd78
  6eff373359ff1f50e5ff2251e3ff5a6279ff475da0ff576dafff485a93ff204fdeff2252e5ff533f56ffc17a72ffb87671ffb87671ffb87671ffb87671ffb876
  71ffb97671ffb67570ff54453bfe54453bfeb67571ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffc27c75ff44313bff2151e6ff1e49ceff1c3b
  9bff1f46c1ff2048c1ff1a3b9fff2150e3ff2453e6ff644240ffc07a74ffb87671ffb87671ffb87671ffb87671ffb87671ffb97671ffb67570ff54453bfe5445
  3bfeb67570ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffbf7a75ff6b433dff2540a2ff2256f4ff2256f4ff2256f3ff2256f3ff2256f4ff2255
  f3ff23388aff875651ffbd7973ffb87671ffb87671ffb87671ffb87671ffb87671ffb97671ffb67571ff54453bfe54453bfeb67570ffb97671ffb87671ffb876
  71ffb87671ffb87671ffb87671ffb77671ffc37d76ff845656ff204cd4ff2156f7ff2256f3ff2256f3ff2056f7ff2448c2ff9a6159ffc07b75ffb87671ffb876
  71ffb87671ffb87671ffb87671ffb87671ffb97671ffb77571ff54453bff54453bfeb67570ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffb876
  71ffb87671ffbf7a71ff68506dff2648bdff1445d2ff1847cfff2f49b1ff7d5765ffbf7a73ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb876
  71ffb97671ffb77571ff54453bff54453bfdb67670ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb8756eff9364
  6dff86637fff89647dff9a6668ffbb7771ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb97671ffb77671ff54453bff5445
  3bfdb57570ffb97671ffb87671ffb87671ffb87671ffb87671ffb87671ffb7736effb7736effb87671ffb87671ffb97771ffba7770ffba7770ffb97671ffb876
  71ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb97671ffb87671ff54453bff54453bfcb57570ffb97671ffb87671ffb876
  71ffb87671ffb87671ffbd7f7affd0a3a0ffd2a7a5ffba7a75ffbc7f7affb87772ffb97772ffba7873ffbc7d78ffb87671ffb97873ffb87772ffb97772ffb977
  72ffb87671ffb87671ffb87671ffb87671ffb97671ffb87671ff54453bff54453bfdb67571ffb97772ffb87671ffb87671ffb87671ffb87570ffc38b87ffd6b0
  acffdab8b4ffdab7b4ffce9f9cffdcbbb8ffd1a6a2ffd2a8a6ffd6b1adffc08480ffd4aba8ffcb9a96ffd0a5a2ffc48d89ffb87570ffb87671ffb87671ffb876
  71ffb97672ffb97772ff54453bff52443af396655fffb77670ffbb7772ffb87671ffb87671ffb87570ffc38a86ffcd9d9affd3a9a5ffd7b1afffc28a86ffd8b3
  b0ffd2a7a4ffd0a5a1ffd9b6b4ffc28884ffd8b4b2ffd0a5a2ffd2a8a6ffc28a86ffb87570ffb87671ffb87671ffbb7772ffb67570ff97665fff53443af44f42
  385057463cbf74554cffa46c66ffbc7873ffb97671ffb87671ffbb7b76ffc38b86ffc28a85ffbf827effc48d89ffc48c88ffcc9b98ffbe807cffc58e8bffb977
  72ffc6918dffc48e8affc38a86ffbb7c77ffb87671ffb97671ffbc7873ffa36b66ff74544cff56463cbb4f42384e00000000473e34144e42386058463dea7c59
  51ffb77570ffbb7873ffb87671ffb77570ffb87570ffb87570ffb77570ffb97772ffbb7c77ffb77570ffb77570ffb87671ffb77570ffb77570ffb77570ffb876
  71ffbb7873ffb67570ff7b5851ff58463ce84e42385d473e3312000000000000000000000000000000004e41370e4f42389756463cff92635cffbb7873ffb876
  71ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffb87671ffbb7873ff92635cff56463cff4f4238954e41
  370c00000000000000000000000000000000000000004f42380000000000000000004d41372c4c4036c3694e46f8a26c65ffb67570ffb97671ffb87671ffb876
  71ffb87671ffb87671ffb87671ffb87671ffb97671ffb67570ffa36c65ff694e46f84c4036c34d41372b00000000000000004f42380000000000000000000000
  00000000000000000000000000004f4238000000000000000000463e335f514339c87e5952fea36c66ffba7772ffb97772ffb87671ffb87671ffb97772ffba77
  72ffa36c66ff7e5952fe514339c9463e335f00000000000000004f42380000000000000000000000000000000000000000000000000000000000000000000000
  00004f4238000000000000000000473e3416423c326f5f4a41d87f5a52ffaa6f6affbe7974ffbe7974ffab706aff815b53ff604a41da423c3271473e33160000
  0000000000004f42380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f4238004f4238000000
  000000000000463d33214e42387b614b42fb865d56ff885f57ff624b42fe4e42387f463d33220000000000000000000000004f42380000000000000000000000
  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f42380000000000000000004c4137044e41
  372052433aaa52443aae4e4237224c41360400000000000000004f4238000000000000000000000000000000000000000000000000000000000000000000ffe0
  7ff0ffc03ff0ff000ff0fe0007f0f80001f0e0000070800000100000000000000000000000000000000000000000000000000000000000000000000000000000
  0000000000000000000000000000000000000000000000000000000000000000000080000010e0000070f80001f0fe0007f0ff000ff0ffc03ff0ffe07ff0

Package: pilot2wrappers
File: app.R
Format: text
Content:
  # Launch the ShinyApp (Do not remove this comment)
  # To deploy, run: rsconnect::deployApp()
  # Or use the blue button on top of this file
  
  pkgload::load_all(export_all = FALSE,helpers = FALSE,attach_testthat = FALSE)
  options( "golem.app.prod" = TRUE)
  pilot2wrappers::run_app() # add parameters here (if any)

Package: pilot2wrappers
File: renv.lock
Format: text
Content:
  {
    "R": {
      "Version": "4.2.0",
      "Repositories": [
        {
          "Name": "CRAN",
          "URL": "https://packagemanager.rstudio.com/cran/2022-02-01"
        },
        {
          "Name": "TEAL",
          "URL": "https://insightsengineering.github.io/depository/2022_06_09"
        }
      ]
    },
    "Packages": {
      "DT": {
        "Package": "DT",
        "Version": "0.20",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0163cd2ce6c7995005a0fc363d570963",
        "Requirements": [
          "crosstalk",
          "htmltools",
          "htmlwidgets",
          "jquerylib",
          "jsonlite",
          "magrittr",
          "promises"
        ]
      },
      "KernSmooth": {
        "Package": "KernSmooth",
        "Version": "2.23-20",
        "Source": "Repository",
        "Repository": "CRAN",
        "Hash": "8dcfa99b14c296bc9f1fd64d52fd3ce7",
        "Requirements": []
      },
      "MASS": {
        "Package": "MASS",
        "Version": "7.3-54",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0e59129db205112e3963904db67fd0dc",
        "Requirements": []
      },
      "Matrix": {
        "Package": "Matrix",
        "Version": "1.3-4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4ed05e9c9726267e4a5872e09c04587c",
        "Requirements": [
          "lattice"
        ]
      },
      "R.cache": {
        "Package": "R.cache",
        "Version": "0.15.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e92a8ea8388c47c82ed8aa435ed3be50",
        "Requirements": [
          "R.methodsS3",
          "R.oo",
          "R.utils",
          "digest"
        ]
      },
      "R.methodsS3": {
        "Package": "R.methodsS3",
        "Version": "1.8.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4bf6453323755202d5909697b6f7c109",
        "Requirements": []
      },
      "R.oo": {
        "Package": "R.oo",
        "Version": "1.24.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5709328352717e2f0a9c012be8a97554",
        "Requirements": [
          "R.methodsS3"
        ]
      },
      "R.utils": {
        "Package": "R.utils",
        "Version": "2.11.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a7ecb8e60815c7a18648e84cd121b23a",
        "Requirements": [
          "R.methodsS3",
          "R.oo"
        ]
      },
      "R6": {
        "Package": "R6",
        "Version": "2.5.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "470851b6d5d0ac559e9d01bb352b4021",
        "Requirements": []
      },
      "RColorBrewer": {
        "Package": "RColorBrewer",
        "Version": "1.1-2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e031418365a7f7a766181ab5a41a5716",
        "Requirements": []
      },
      "Rcpp": {
        "Package": "Rcpp",
        "Version": "1.0.8",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "22b546dd7e337f6c0c58a39983a496bc",
        "Requirements": []
      },
      "SQUAREM": {
        "Package": "SQUAREM",
        "Version": "2021.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0cf10dab0d023d5b46a5a14387556891",
        "Requirements": []
      },
      "Tplyr": {
        "Package": "Tplyr",
        "Version": "0.4.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "88528aaa5d91c9b32536f3c5df138489",
        "Requirements": [
          "assertthat",
          "dplyr",
          "forcats",
          "lifecycle",
          "magrittr",
          "purrr",
          "rlang",
          "stringr",
          "tibble",
          "tidyr",
          "tidyselect"
        ]
      },
      "askpass": {
        "Package": "askpass",
        "Version": "1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e8a22846fff485f0be3770c2da758713",
        "Requirements": [
          "sys"
        ]
      },
      "assertthat": {
        "Package": "assertthat",
        "Version": "0.2.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "50c838a310445e954bc13f26f26a6ecf",
        "Requirements": []
      },
      "attempt": {
        "Package": "attempt",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d7421bb5dfeb2676b9e4a5a60c2fcfd2",
        "Requirements": [
          "rlang"
        ]
      },
      "backports": {
        "Package": "backports",
        "Version": "1.4.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c39fbec8a30d23e721980b8afb31984c",
        "Requirements": []
      },
      "base64enc": {
        "Package": "base64enc",
        "Version": "0.1-3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "543776ae6848fde2f48ff3816d0628bc",
        "Requirements": []
      },
      "bit": {
        "Package": "bit",
        "Version": "4.0.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f36715f14d94678eea9933af927bc15d",
        "Requirements": []
      },
      "bit64": {
        "Package": "bit64",
        "Version": "4.0.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "9fe98599ca456d6552421db0d6772d8f",
        "Requirements": [
          "bit"
        ]
      },
      "bitops": {
        "Package": "bitops",
        "Version": "1.0-7",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "b7d8d8ee39869c18d8846a184dd8a1af",
        "Requirements": []
      },
      "brew": {
        "Package": "brew",
        "Version": "1.0-6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "92a5f887f9ae3035ac7afde22ba73ee9",
        "Requirements": []
      },
      "brio": {
        "Package": "brio",
        "Version": "1.1.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "976cf154dfb043c012d87cddd8bca363",
        "Requirements": []
      },
      "broom": {
        "Package": "broom",
        "Version": "0.7.12",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bfa8a039d77ae8d5413254e572c8abea",
        "Requirements": [
          "backports",
          "dplyr",
          "ellipsis",
          "generics",
          "ggplot2",
          "glue",
          "purrr",
          "rlang",
          "stringr",
          "tibble",
          "tidyr"
        ]
      },
      "bslib": {
        "Package": "bslib",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "56ae7e1987b340186a8a5a157c2ec358",
        "Requirements": [
          "htmltools",
          "jquerylib",
          "jsonlite",
          "rlang",
          "sass"
        ]
      },
      "cachem": {
        "Package": "cachem",
        "Version": "1.0.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "648c5b3d71e6a37e3043617489a0a0e9",
        "Requirements": [
          "fastmap",
          "rlang"
        ]
      },
      "callr": {
        "Package": "callr",
        "Version": "3.7.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "461aa75a11ce2400245190ef5d3995df",
        "Requirements": [
          "R6",
          "processx"
        ]
      },
      "checkmate": {
        "Package": "checkmate",
        "Version": "2.0.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a667800d5f0350371bedeb8b8b950289",
        "Requirements": [
          "backports"
        ]
      },
      "class": {
        "Package": "class",
        "Version": "7.3-19",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "1593b7beb067c8381c0d24e38bd778e0",
        "Requirements": [
          "MASS"
        ]
      },
      "cli": {
        "Package": "cli",
        "Version": "3.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "da5160e769a652e3ec7111d63883f9bc",
        "Requirements": [
          "glue"
        ]
      },
      "clipr": {
        "Package": "clipr",
        "Version": "0.7.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ebaa97ac99cc2daf04e77eecc7b781d7",
        "Requirements": []
      },
      "codetools": {
        "Package": "codetools",
        "Version": "0.2-18",
        "Source": "Repository",
        "Repository": "CRAN",
        "Hash": "019388fc48e48b3da0d3a76ff94608a8",
        "Requirements": []
      },
      "colorspace": {
        "Package": "colorspace",
        "Version": "2.0-2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6baccb763ee83c0bd313460fdb8b8a84",
        "Requirements": []
      },
      "commonmark": {
        "Package": "commonmark",
        "Version": "1.7",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0f22be39ec1d141fd03683c06f3a6e67",
        "Requirements": []
      },
      "config": {
        "Package": "config",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "31d77b09f63550cee9ecb5a08bf76e8f",
        "Requirements": [
          "yaml"
        ]
      },
      "cowplot": {
        "Package": "cowplot",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "b418e8423699d11c7f2087c2bfd07da2",
        "Requirements": [
          "ggplot2",
          "gtable",
          "rlang",
          "scales"
        ]
      },
      "cpp11": {
        "Package": "cpp11",
        "Version": "0.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "fa53ce256cd280f468c080a58ea5ba8c",
        "Requirements": []
      },
      "crayon": {
        "Package": "crayon",
        "Version": "1.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0a6a65d92bd45b47b94b84244b528d17",
        "Requirements": []
      },
      "credentials": {
        "Package": "credentials",
        "Version": "1.3.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "93762d0a34d78e6a025efdbfb5c6bb41",
        "Requirements": [
          "askpass",
          "curl",
          "jsonlite",
          "openssl",
          "sys"
        ]
      },
      "crosstalk": {
        "Package": "crosstalk",
        "Version": "1.2.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6aa54f69598c32177e920eb3402e8293",
        "Requirements": [
          "R6",
          "htmltools",
          "jsonlite",
          "lazyeval"
        ]
      },
      "curl": {
        "Package": "curl",
        "Version": "4.3.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "022c42d49c28e95d69ca60446dbabf88",
        "Requirements": []
      },
      "desc": {
        "Package": "desc",
        "Version": "1.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "28763d08fadd0b733e3cee9dab4e12fe",
        "Requirements": [
          "R6",
          "crayon",
          "rprojroot"
        ]
      },
      "devtools": {
        "Package": "devtools",
        "Version": "2.4.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "fc35e13bb582e5fe6f63f3d647a4cbe5",
        "Requirements": [
          "callr",
          "cli",
          "desc",
          "ellipsis",
          "fs",
          "httr",
          "lifecycle",
          "memoise",
          "pkgbuild",
          "pkgload",
          "rcmdcheck",
          "remotes",
          "rlang",
          "roxygen2",
          "rstudioapi",
          "rversions",
          "sessioninfo",
          "testthat",
          "usethis",
          "withr"
        ]
      },
      "diffobj": {
        "Package": "diffobj",
        "Version": "0.3.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bcaa8b95f8d7d01a5dedfd959ce88ab8",
        "Requirements": [
          "crayon"
        ]
      },
      "digest": {
        "Package": "digest",
        "Version": "0.6.29",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "cf6b206a045a684728c3267ef7596190",
        "Requirements": []
      },
      "dockerfiler": {
        "Package": "dockerfiler",
        "Version": "0.1.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e96dd3b237b2f38a2955f4bf41e047a1",
        "Requirements": [
          "R6",
          "attempt",
          "cli",
          "desc",
          "fs",
          "glue",
          "jsonlite",
          "pkgbuild",
          "remotes",
          "usethis"
        ]
      },
      "downlit": {
        "Package": "downlit",
        "Version": "0.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ba63dc9ab5a31f3209892437e40c5f60",
        "Requirements": [
          "brio",
          "desc",
          "digest",
          "evaluate",
          "fansi",
          "memoise",
          "rlang",
          "vctrs",
          "yaml"
        ]
      },
      "dplyr": {
        "Package": "dplyr",
        "Version": "1.0.7",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "36f1ae62f026c8ba9f9b5c9a08c03297",
        "Requirements": [
          "R6",
          "ellipsis",
          "generics",
          "glue",
          "lifecycle",
          "magrittr",
          "pillar",
          "rlang",
          "tibble",
          "tidyselect",
          "vctrs"
        ]
      },
      "easyalluvial": {
        "Package": "easyalluvial",
        "Version": "0.3.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "668679c89154380feeeaa10c4a1db653",
        "Requirements": [
          "RColorBrewer",
          "dplyr",
          "forcats",
          "ggalluvial",
          "ggplot2",
          "ggridges",
          "gridExtra",
          "magrittr",
          "progress",
          "progressr",
          "purrr",
          "randomForest",
          "recipes",
          "rlang",
          "stringr",
          "tibble",
          "tidyr"
        ]
      },
      "ellipsis": {
        "Package": "ellipsis",
        "Version": "0.3.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bb0eec2fe32e88d9e2836c2f73ea2077",
        "Requirements": [
          "rlang"
        ]
      },
      "emmeans": {
        "Package": "emmeans",
        "Version": "1.7.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "90ddb148f4aac2689cefaf6c11ee47e9",
        "Requirements": [
          "estimability",
          "mvtnorm",
          "numDeriv",
          "xtable"
        ]
      },
      "estimability": {
        "Package": "estimability",
        "Version": "1.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "05901bd61be60fd3bfc5b7d7c3517d1d",
        "Requirements": []
      },
      "evaluate": {
        "Package": "evaluate",
        "Version": "0.14",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ec8ca05cffcc70569eaaad8469d2a3a7",
        "Requirements": []
      },
      "fansi": {
        "Package": "fansi",
        "Version": "1.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f28149c2d7a1342a834b314e95e67260",
        "Requirements": []
      },
      "farver": {
        "Package": "farver",
        "Version": "2.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c98eb5133d9cb9e1622b8691487f11bb",
        "Requirements": []
      },
      "fastmap": {
        "Package": "fastmap",
        "Version": "1.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "77bd60a6157420d4ffa93b27cf6a58b8",
        "Requirements": []
      },
      "fontawesome": {
        "Package": "fontawesome",
        "Version": "0.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "55624ed409e46c5f358b2c060be87f67",
        "Requirements": [
          "htmltools",
          "rlang"
        ]
      },
      "forcats": {
        "Package": "forcats",
        "Version": "0.5.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "81c3244cab67468aac4c60550832655d",
        "Requirements": [
          "ellipsis",
          "magrittr",
          "rlang",
          "tibble"
        ]
      },
      "formatters": {
        "Package": "formatters",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "94fe1879a08dc2d575c3a5eeae33a7c9",
        "Requirements": [
          "htmltools"
        ]
      },
      "fs": {
        "Package": "fs",
        "Version": "1.5.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7c89603d81793f0d5486d91ab1fc6f1d",
        "Requirements": []
      },
      "future": {
        "Package": "future",
        "Version": "1.23.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7bf6fbed7f00cae876901fd70c04f3a4",
        "Requirements": [
          "digest",
          "globals",
          "listenv",
          "parallelly"
        ]
      },
      "future.apply": {
        "Package": "future.apply",
        "Version": "1.8.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f568ce73d3d59582b0f7babd0eb33d07",
        "Requirements": [
          "future",
          "globals"
        ]
      },
      "generics": {
        "Package": "generics",
        "Version": "0.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "177475892cf4a55865868527654a7741",
        "Requirements": []
      },
      "gert": {
        "Package": "gert",
        "Version": "1.5.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8fddce7cbd59467106266a6e93e253b4",
        "Requirements": [
          "askpass",
          "credentials",
          "openssl",
          "rstudioapi",
          "sys",
          "zip"
        ]
      },
      "ggalluvial": {
        "Package": "ggalluvial",
        "Version": "0.12.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8e8537ec2a70017be8e5e20b1bbf4e98",
        "Requirements": [
          "dplyr",
          "ggplot2",
          "lazyeval",
          "rlang",
          "tidyr",
          "tidyselect"
        ]
      },
      "ggplot2": {
        "Package": "ggplot2",
        "Version": "3.3.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d7566c471c7b17e095dd023b9ef155ad",
        "Requirements": [
          "MASS",
          "digest",
          "glue",
          "gtable",
          "isoband",
          "mgcv",
          "rlang",
          "scales",
          "tibble",
          "withr"
        ]
      },
      "ggridges": {
        "Package": "ggridges",
        "Version": "0.5.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "9d028e8f37c84dba356ce3c367a1978e",
        "Requirements": [
          "ggplot2",
          "plyr",
          "scales",
          "withr"
        ]
      },
      "gh": {
        "Package": "gh",
        "Version": "1.3.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "38c2580abbda249bd6afeec00d14f531",
        "Requirements": [
          "cli",
          "gitcreds",
          "httr",
          "ini",
          "jsonlite"
        ]
      },
      "gitcreds": {
        "Package": "gitcreds",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f3aefccc1cc50de6338146b62f115de8",
        "Requirements": []
      },
      "globals": {
        "Package": "globals",
        "Version": "0.14.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "eca8023ed5ca6372479ebb9b3207f5ae",
        "Requirements": [
          "codetools"
        ]
      },
      "glue": {
        "Package": "glue",
        "Version": "1.6.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "de07842fc27ebf60e1102091c0c85e47",
        "Requirements": []
      },
      "golem": {
        "Package": "golem",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0eaf594de1dcbcd37c6d79806d57b473",
        "Requirements": [
          "attempt",
          "cli",
          "config",
          "crayon",
          "desc",
          "dockerfiler",
          "fs",
          "here",
          "htmltools",
          "jsonlite",
          "pkgload",
          "remotes",
          "rlang",
          "roxygen2",
          "rstudioapi",
          "shiny",
          "testthat",
          "usethis",
          "yaml"
        ]
      },
      "gower": {
        "Package": "gower",
        "Version": "0.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "be6a2b3529928bd803d1c437d1d43152",
        "Requirements": []
      },
      "gridExtra": {
        "Package": "gridExtra",
        "Version": "2.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7d7f283939f563670a697165b2cf5560",
        "Requirements": [
          "gtable"
        ]
      },
      "gt": {
        "Package": "gt",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e027761c361e66a24e22f9446b3dd86c",
        "Requirements": [
          "base64enc",
          "bitops",
          "checkmate",
          "commonmark",
          "dplyr",
          "fs",
          "ggplot2",
          "glue",
          "htmltools",
          "magrittr",
          "rlang",
          "sass",
          "scales",
          "stringr",
          "tibble",
          "tidyselect"
        ]
      },
      "gtable": {
        "Package": "gtable",
        "Version": "0.3.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ac5c6baf7822ce8732b343f14c072c4d",
        "Requirements": []
      },
      "haven": {
        "Package": "haven",
        "Version": "2.4.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "10bec8a8264f3eb59531e8c4c0303f96",
        "Requirements": [
          "cpp11",
          "forcats",
          "hms",
          "readr",
          "rlang",
          "tibble",
          "tidyselect",
          "vctrs"
        ]
      },
      "here": {
        "Package": "here",
        "Version": "1.0.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "24b224366f9c2e7534d2344d10d59211",
        "Requirements": [
          "rprojroot"
        ]
      },
      "highr": {
        "Package": "highr",
        "Version": "0.9",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8eb36c8125038e648e5d111c0d7b2ed4",
        "Requirements": [
          "xfun"
        ]
      },
      "hms": {
        "Package": "hms",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5b8a2dd0fdbe2ab4f6081e6c7be6dfca",
        "Requirements": [
          "ellipsis",
          "lifecycle",
          "pkgconfig",
          "rlang",
          "vctrs"
        ]
      },
      "htmltools": {
        "Package": "htmltools",
        "Version": "0.5.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "526c484233f42522278ab06fb185cb26",
        "Requirements": [
          "base64enc",
          "digest",
          "fastmap",
          "rlang"
        ]
      },
      "htmlwidgets": {
        "Package": "htmlwidgets",
        "Version": "1.5.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "76147821cd3fcd8c4b04e1ef0498e7fb",
        "Requirements": [
          "htmltools",
          "jsonlite",
          "yaml"
        ]
      },
      "httpuv": {
        "Package": "httpuv",
        "Version": "1.6.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "97fe71f0a4a1c9890e6c2128afa04bc0",
        "Requirements": [
          "R6",
          "Rcpp",
          "later",
          "promises"
        ]
      },
      "httr": {
        "Package": "httr",
        "Version": "1.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a525aba14184fec243f9eaec62fbed43",
        "Requirements": [
          "R6",
          "curl",
          "jsonlite",
          "mime",
          "openssl"
        ]
      },
      "huxtable": {
        "Package": "huxtable",
        "Version": "5.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "633926f3332d7a937ff16a8a98aa2192",
        "Requirements": [
          "R6",
          "assertthat",
          "commonmark",
          "generics",
          "glue",
          "memoise",
          "rlang",
          "stringi",
          "stringr",
          "tidyselect",
          "xml2"
        ]
      },
      "ini": {
        "Package": "ini",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6154ec2223172bce8162d4153cda21f7",
        "Requirements": []
      },
      "ipred": {
        "Package": "ipred",
        "Version": "0.9-12",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8312ebd8121ad2eca1c76441040bee5d",
        "Requirements": [
          "MASS",
          "class",
          "nnet",
          "prodlim",
          "rpart",
          "survival"
        ]
      },
      "isoband": {
        "Package": "isoband",
        "Version": "0.2.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7ab57a6de7f48a8dc84910d1eca42883",
        "Requirements": []
      },
      "jquerylib": {
        "Package": "jquerylib",
        "Version": "0.1.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5aab57a3bd297eee1c1d862735972182",
        "Requirements": [
          "htmltools"
        ]
      },
      "jsonlite": {
        "Package": "jsonlite",
        "Version": "1.7.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "68c37fd8f863c6273dcd24928c17d6e1",
        "Requirements": []
      },
      "kableExtra": {
        "Package": "kableExtra",
        "Version": "1.3.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "49b625e6aabe4c5f091f5850aba8ff78",
        "Requirements": [
          "digest",
          "glue",
          "htmltools",
          "knitr",
          "magrittr",
          "rmarkdown",
          "rstudioapi",
          "rvest",
          "scales",
          "stringr",
          "svglite",
          "viridisLite",
          "webshot",
          "xml2"
        ]
      },
      "knitr": {
        "Package": "knitr",
        "Version": "1.37",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a4ec675eb332a33fe7b7fe26f70e1f98",
        "Requirements": [
          "evaluate",
          "highr",
          "stringr",
          "xfun",
          "yaml"
        ]
      },
      "labeling": {
        "Package": "labeling",
        "Version": "0.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "3d5108641f47470611a32d0bdf357a72",
        "Requirements": []
      },
      "later": {
        "Package": "later",
        "Version": "1.3.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7e7b457d7766bc47f2a5f21cc2984f8e",
        "Requirements": [
          "Rcpp",
          "rlang"
        ]
      },
      "lattice": {
        "Package": "lattice",
        "Version": "0.20-45",
        "Source": "Repository",
        "Repository": "CRAN",
        "Hash": "b64cdbb2b340437c4ee047a1f4c4377b",
        "Requirements": []
      },
      "lava": {
        "Package": "lava",
        "Version": "1.6.10",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4c31a28528978d8689145f5274ce9058",
        "Requirements": [
          "SQUAREM",
          "future.apply",
          "numDeriv",
          "progressr",
          "survival"
        ]
      },
      "lazyeval": {
        "Package": "lazyeval",
        "Version": "0.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d908914ae53b04d4c0c0fd72ecc35370",
        "Requirements": []
      },
      "lifecycle": {
        "Package": "lifecycle",
        "Version": "1.0.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a6b6d352e3ed897373ab19d8395c98d0",
        "Requirements": [
          "glue",
          "rlang"
        ]
      },
      "listenv": {
        "Package": "listenv",
        "Version": "0.8.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0bde42ee282efb18c7c4e63822f5b4f7",
        "Requirements": []
      },
      "logger": {
        "Package": "logger",
        "Version": "0.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c269b06beb2bbadb0d058c0e6fa4ec3d",
        "Requirements": []
      },
      "lubridate": {
        "Package": "lubridate",
        "Version": "1.8.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "2ff5eedb6ee38fb1b81205c73be1be5a",
        "Requirements": [
          "cpp11",
          "generics"
        ]
      },
      "magrittr": {
        "Package": "magrittr",
        "Version": "2.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "cdc87ecd81934679d1557633d8e1fe51",
        "Requirements": []
      },
      "markdown": {
        "Package": "markdown",
        "Version": "1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "61e4a10781dd00d7d81dd06ca9b94e95",
        "Requirements": [
          "mime",
          "xfun"
        ]
      },
      "memoise": {
        "Package": "memoise",
        "Version": "2.0.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e2817ccf4a065c5d9d7f2cfbe7c1d78c",
        "Requirements": [
          "cachem",
          "rlang"
        ]
      },
      "mgcv": {
        "Package": "mgcv",
        "Version": "1.8-38",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "be3c61ffbb1e3d3b3df214d192ac5444",
        "Requirements": [
          "Matrix",
          "nlme"
        ]
      },
      "mime": {
        "Package": "mime",
        "Version": "0.12",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "18e9c28c1d3ca1560ce30658b22ce104",
        "Requirements": []
      },
      "munsell": {
        "Package": "munsell",
        "Version": "0.5.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6dfe8bf774944bd5595785e3229d8771",
        "Requirements": [
          "colorspace"
        ]
      },
      "mvtnorm": {
        "Package": "mvtnorm",
        "Version": "1.1-3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7a7541cc284cb2ba3ba7eae645892af5",
        "Requirements": []
      },
      "nlme": {
        "Package": "nlme",
        "Version": "3.1-153",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "2d632e0d963a653a0329756ce701ecdd",
        "Requirements": [
          "lattice"
        ]
      },
      "nnet": {
        "Package": "nnet",
        "Version": "7.3-16",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "3a3dc184000bc9e6c145c4dbde4dd702",
        "Requirements": []
      },
      "numDeriv": {
        "Package": "numDeriv",
        "Version": "2016.8-1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "df58958f293b166e4ab885ebcad90e02",
        "Requirements": []
      },
      "openssl": {
        "Package": "openssl",
        "Version": "1.4.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "69fdf291af288f32fd4cd93315084ea8",
        "Requirements": [
          "askpass"
        ]
      },
      "parallelly": {
        "Package": "parallelly",
        "Version": "1.30.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "67db13907a9cea89c118cf82d448799f",
        "Requirements": []
      },
      "parcats": {
        "Package": "parcats",
        "Version": "0.0.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "70e857af0d7d71b65562b4cbb9e615e3",
        "Requirements": [
          "dplyr",
          "easyalluvial",
          "forcats",
          "htmlwidgets",
          "magrittr",
          "purrr",
          "stringr",
          "tibble",
          "tidyr"
        ]
      },
      "pillar": {
        "Package": "pillar",
        "Version": "1.6.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "464a3e015331eeb8efd1d239cad5128d",
        "Requirements": [
          "cli",
          "crayon",
          "ellipsis",
          "fansi",
          "glue",
          "lifecycle",
          "rlang",
          "utf8",
          "vctrs"
        ]
      },
      "pkgbuild": {
        "Package": "pkgbuild",
        "Version": "1.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "66d2adfed274daf81ccfe77d974c3b9b",
        "Requirements": [
          "R6",
          "callr",
          "cli",
          "crayon",
          "desc",
          "prettyunits",
          "rprojroot",
          "withr"
        ]
      },
      "pkgconfig": {
        "Package": "pkgconfig",
        "Version": "2.0.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "01f28d4278f15c76cddbea05899c5d6f",
        "Requirements": []
      },
      "pkgdown": {
        "Package": "pkgdown",
        "Version": "2.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "1ef66f10b752bb5f17e33fe9fa861005",
        "Requirements": [
          "bslib",
          "callr",
          "crayon",
          "desc",
          "digest",
          "downlit",
          "fs",
          "httr",
          "jsonlite",
          "magrittr",
          "memoise",
          "purrr",
          "ragg",
          "rlang",
          "rmarkdown",
          "tibble",
          "whisker",
          "withr",
          "xml2",
          "yaml"
        ]
      },
      "pkglite": {
        "Package": "pkglite",
        "Version": "0.2.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "10103029c41084775f6f0a839302cdd4",
        "Requirements": [
          "cli",
          "magrittr",
          "remotes"
        ]
      },
      "pkgload": {
        "Package": "pkgload",
        "Version": "1.2.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7533cd805940821bf23eaf3c8d4c1735",
        "Requirements": [
          "cli",
          "crayon",
          "desc",
          "rlang",
          "rprojroot",
          "rstudioapi",
          "withr"
        ]
      },
      "plyr": {
        "Package": "plyr",
        "Version": "1.8.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ec0e5ab4e5f851f6ef32cd1d1984957f",
        "Requirements": [
          "Rcpp"
        ]
      },
      "praise": {
        "Package": "praise",
        "Version": "1.0.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a555924add98c99d2f411e37e7d25e9f",
        "Requirements": []
      },
      "prettyunits": {
        "Package": "prettyunits",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "95ef9167b75dde9d2ccc3c7528393e7e",
        "Requirements": []
      },
      "processx": {
        "Package": "processx",
        "Version": "3.5.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0cbca2bc4d16525d009c4dbba156b37c",
        "Requirements": [
          "R6",
          "ps"
        ]
      },
      "prodlim": {
        "Package": "prodlim",
        "Version": "2019.11.13",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c243bf70db3a6631a0c8783152fb7db9",
        "Requirements": [
          "KernSmooth",
          "Rcpp",
          "lava",
          "survival"
        ]
      },
      "progress": {
        "Package": "progress",
        "Version": "1.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "14dc9f7a3c91ebb14ec5bb9208a07061",
        "Requirements": [
          "R6",
          "crayon",
          "hms",
          "prettyunits"
        ]
      },
      "progressr": {
        "Package": "progressr",
        "Version": "0.10.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7df448f5ae46ab0a1af0fb619349d3fd",
        "Requirements": [
          "digest"
        ]
      },
      "promises": {
        "Package": "promises",
        "Version": "1.2.0.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4ab2c43adb4d4699cf3690acd378d75d",
        "Requirements": [
          "R6",
          "Rcpp",
          "later",
          "magrittr",
          "rlang"
        ]
      },
      "ps": {
        "Package": "ps",
        "Version": "1.6.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "32620e2001c1dce1af49c49dccbb9420",
        "Requirements": []
      },
      "purrr": {
        "Package": "purrr",
        "Version": "0.3.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "97def703420c8ab10d8f0e6c72101e02",
        "Requirements": [
          "magrittr",
          "rlang"
        ]
      },
      "ragg": {
        "Package": "ragg",
        "Version": "1.2.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4577b3859de34ffb2938d9a878dcf384",
        "Requirements": [
          "systemfonts",
          "textshaping"
        ]
      },
      "randomForest": {
        "Package": "randomForest",
        "Version": "4.6-14",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6367ba8128568cc5ebf8082e440948e4",
        "Requirements": []
      },
      "rappdirs": {
        "Package": "rappdirs",
        "Version": "0.3.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5e3c5dc0b071b21fa128676560dbe94d",
        "Requirements": []
      },
      "rcmdcheck": {
        "Package": "rcmdcheck",
        "Version": "1.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8f25ebe2ec38b1f2aef3b0d2ef76f6c4",
        "Requirements": [
          "R6",
          "callr",
          "cli",
          "curl",
          "desc",
          "digest",
          "pkgbuild",
          "prettyunits",
          "rprojroot",
          "sessioninfo",
          "withr",
          "xopen"
        ]
      },
      "reactR": {
        "Package": "reactR",
        "Version": "0.4.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "75389c8091eb14ee21c6bc87a88b3809",
        "Requirements": [
          "htmltools"
        ]
      },
      "reactable": {
        "Package": "reactable",
        "Version": "0.2.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ac1afe50d1c77470a72971a07fd146b1",
        "Requirements": [
          "digest",
          "htmltools",
          "htmlwidgets",
          "jsonlite",
          "reactR"
        ]
      },
      "readr": {
        "Package": "readr",
        "Version": "2.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "9c59de1357dc209868b5feb5c9f0fe2f",
        "Requirements": [
          "R6",
          "cli",
          "clipr",
          "cpp11",
          "crayon",
          "hms",
          "lifecycle",
          "rlang",
          "tibble",
          "tzdb",
          "vroom"
        ]
      },
      "recipes": {
        "Package": "recipes",
        "Version": "0.1.17",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "443951ef5d9e72a96405cbb0157bb1d4",
        "Requirements": [
          "Matrix",
          "dplyr",
          "ellipsis",
          "generics",
          "glue",
          "gower",
          "ipred",
          "lifecycle",
          "lubridate",
          "magrittr",
          "purrr",
          "rlang",
          "tibble",
          "tidyr",
          "tidyselect",
          "timeDate",
          "vctrs",
          "withr"
        ]
      },
      "rematch2": {
        "Package": "rematch2",
        "Version": "2.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "76c9e04c712a05848ae7a23d2f170a40",
        "Requirements": [
          "tibble"
        ]
      },
      "remotes": {
        "Package": "remotes",
        "Version": "2.4.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "227045be9aee47e6dda9bb38ac870d67",
        "Requirements": []
      },
      "renv": {
        "Package": "renv",
        "Version": "0.15.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "206c4ef8b7ad6fb1060d69aa7b9dfe69",
        "Requirements": []
      },
      "rlang": {
        "Package": "rlang",
        "Version": "1.0.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ec923a35ba44bc86fbf95dacaccf65da",
        "Requirements": []
      },
      "rmarkdown": {
        "Package": "rmarkdown",
        "Version": "2.11",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "320017b52d05a943981272b295750388",
        "Requirements": [
          "evaluate",
          "htmltools",
          "jquerylib",
          "jsonlite",
          "knitr",
          "stringr",
          "tinytex",
          "xfun",
          "yaml"
        ]
      },
      "roxygen2": {
        "Package": "roxygen2",
        "Version": "7.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "eb9849556c4250305106e82edae35b72",
        "Requirements": [
          "R6",
          "brew",
          "commonmark",
          "cpp11",
          "desc",
          "digest",
          "knitr",
          "pkgload",
          "purrr",
          "rlang",
          "stringi",
          "stringr",
          "xml2"
        ]
      },
      "rpart": {
        "Package": "rpart",
        "Version": "4.1-15",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "9787c1fcb680e655d062e7611cadf78e",
        "Requirements": []
      },
      "rprojroot": {
        "Package": "rprojroot",
        "Version": "2.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "249d8cd1e74a8f6a26194a91b47f21d1",
        "Requirements": []
      },
      "rstudioapi": {
        "Package": "rstudioapi",
        "Version": "0.13",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "06c85365a03fdaf699966cc1d3cf53ea",
        "Requirements": []
      },
      "rtables": {
        "Package": "rtables",
        "Version": "0.5.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "645b3b0221c4bbb464025b480be98d42",
        "Requirements": [
          "formatters",
          "htmltools",
          "magrittr"
        ]
      },
      "rversions": {
        "Package": "rversions",
        "Version": "2.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "f88fab00907b312f8b23ec13e2d437cb",
        "Requirements": [
          "curl",
          "xml2"
        ]
      },
      "rvest": {
        "Package": "rvest",
        "Version": "1.0.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bb099886deffecd6f9b298b7d4492943",
        "Requirements": [
          "httr",
          "lifecycle",
          "magrittr",
          "rlang",
          "selectr",
          "tibble",
          "xml2"
        ]
      },
      "sass": {
        "Package": "sass",
        "Version": "0.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "50cf822feb64bb3977bda0b7091be623",
        "Requirements": [
          "R6",
          "fs",
          "htmltools",
          "rappdirs",
          "rlang"
        ]
      },
      "scales": {
        "Package": "scales",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6f76f71042411426ec8df6c54f34e6dd",
        "Requirements": [
          "R6",
          "RColorBrewer",
          "farver",
          "labeling",
          "lifecycle",
          "munsell",
          "viridisLite"
        ]
      },
      "selectr": {
        "Package": "selectr",
        "Version": "0.4-2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "3838071b66e0c566d55cc26bd6e27bf4",
        "Requirements": [
          "R6",
          "stringr"
        ]
      },
      "sessioninfo": {
        "Package": "sessioninfo",
        "Version": "1.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "3f9796a8d0a0e8c6eb49a4b029359d1f",
        "Requirements": [
          "cli"
        ]
      },
      "shiny": {
        "Package": "shiny",
        "Version": "1.7.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "00344c227c7bd0ab5d78052c5d736c44",
        "Requirements": [
          "R6",
          "bslib",
          "cachem",
          "commonmark",
          "crayon",
          "ellipsis",
          "fastmap",
          "fontawesome",
          "glue",
          "htmltools",
          "httpuv",
          "jsonlite",
          "later",
          "lifecycle",
          "mime",
          "promises",
          "rlang",
          "sourcetools",
          "withr",
          "xtable"
        ]
      },
      "shinyWidgets": {
        "Package": "shinyWidgets",
        "Version": "0.6.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "89b90f439e5a824f8bcbadd082106902",
        "Requirements": [
          "bslib",
          "htmltools",
          "jsonlite",
          "sass",
          "shiny"
        ]
      },
      "shinyjs": {
        "Package": "shinyjs",
        "Version": "2.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "802e4786b353a4bb27116957558548d5",
        "Requirements": [
          "digest",
          "jsonlite",
          "shiny"
        ]
      },
      "sourcetools": {
        "Package": "sourcetools",
        "Version": "0.1.7",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "947e4e02a79effa5d512473e10f41797",
        "Requirements": []
      },
      "stringi": {
        "Package": "stringi",
        "Version": "1.7.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "bba431031d30789535745a9627ac9271",
        "Requirements": []
      },
      "stringr": {
        "Package": "stringr",
        "Version": "1.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "0759e6b6c0957edb1311028a49a35e76",
        "Requirements": [
          "glue",
          "magrittr",
          "stringi"
        ]
      },
      "styler": {
        "Package": "styler",
        "Version": "1.6.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d9e85c794c5a723aabed32a49926186a",
        "Requirements": [
          "R.cache",
          "backports",
          "cli",
          "glue",
          "magrittr",
          "purrr",
          "rematch2",
          "rlang",
          "rprojroot",
          "tibble",
          "withr",
          "xfun"
        ]
      },
      "survival": {
        "Package": "survival",
        "Version": "3.2-13",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6f0a0fadc63bc6570fe172770f15bbc4",
        "Requirements": [
          "Matrix"
        ]
      },
      "svglite": {
        "Package": "svglite",
        "Version": "2.0.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8fb6188960bf0f90996ce52f9c2106ac",
        "Requirements": [
          "cpp11",
          "systemfonts"
        ]
      },
      "sys": {
        "Package": "sys",
        "Version": "3.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "b227d13e29222b4574486cfcbde077fa",
        "Requirements": []
      },
      "systemfonts": {
        "Package": "systemfonts",
        "Version": "1.0.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5be9fcf8ef6763e8cb13ab009e273a1d",
        "Requirements": [
          "cpp11"
        ]
      },
      "teal": {
        "Package": "teal",
        "Version": "0.11.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ad79297c93bd654f51e19a4b879f69b5",
        "Requirements": [
          "checkmate",
          "lifecycle",
          "logger",
          "magrittr",
          "rlang",
          "shiny",
          "shinyjs",
          "styler",
          "teal.code",
          "teal.data",
          "teal.logger",
          "teal.reporter",
          "teal.slice",
          "teal.transform"
        ]
      },
      "teal.code": {
        "Package": "teal.code",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "cf26b243e9767770ed2a4dce6b9879ab",
        "Requirements": [
          "R6",
          "checkmate",
          "crayon",
          "lifecycle",
          "shiny",
          "styler",
          "teal.widgets"
        ]
      },
      "teal.data": {
        "Package": "teal.data",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "afb508138f843ee8c45c8899a9a746e9",
        "Requirements": [
          "R6",
          "checkmate",
          "digest",
          "formatters",
          "lifecycle",
          "logger",
          "rlang",
          "shiny",
          "shinyjs",
          "teal.logger",
          "yaml"
        ]
      },
      "teal.logger": {
        "Package": "teal.logger",
        "Version": "0.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7c4547a5c24944a9f6aa8625c36677cc",
        "Requirements": [
          "glue",
          "lifecycle",
          "logger",
          "shiny",
          "withr"
        ]
      },
      "teal.reporter": {
        "Package": "teal.reporter",
        "Version": "0.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d571e15e0572499696a3d2ab144d8210",
        "Requirements": [
          "R6",
          "checkmate",
          "knitr",
          "lifecycle",
          "rmarkdown",
          "shiny",
          "shinyWidgets",
          "yaml",
          "zip"
        ]
      },
      "teal.slice": {
        "Package": "teal.slice",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "d3e274b20a2846c7887f7e60fe9240af",
        "Requirements": [
          "R6",
          "checkmate",
          "dplyr",
          "ggplot2",
          "lifecycle",
          "logger",
          "shiny",
          "shinyWidgets",
          "shinyjs",
          "teal.data",
          "teal.logger",
          "teal.widgets"
        ]
      },
      "teal.transform": {
        "Package": "teal.transform",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4f7e157538d6e6191381d665fdfbdc41",
        "Requirements": [
          "checkmate",
          "dplyr",
          "formatters",
          "lifecycle",
          "logger",
          "magrittr",
          "rlang",
          "shiny",
          "shinyjs",
          "teal.code",
          "teal.data",
          "teal.logger",
          "teal.slice",
          "teal.widgets",
          "tidyr",
          "tidyselect"
        ]
      },
      "teal.widgets": {
        "Package": "teal.widgets",
        "Version": "0.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e8225307ddc054a7bddeba9a2b5dd1ee",
        "Requirements": [
          "checkmate",
          "ggplot2",
          "lifecycle",
          "rtables",
          "shiny",
          "shinyWidgets",
          "shinyjs"
        ]
      },
      "testthat": {
        "Package": "testthat",
        "Version": "3.1.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "32454e5780e8dbe31e4b61b13d8918fe",
        "Requirements": [
          "R6",
          "brio",
          "callr",
          "cli",
          "crayon",
          "desc",
          "digest",
          "ellipsis",
          "evaluate",
          "jsonlite",
          "lifecycle",
          "magrittr",
          "pkgload",
          "praise",
          "processx",
          "ps",
          "rlang",
          "waldo",
          "withr"
        ]
      },
      "textshaping": {
        "Package": "textshaping",
        "Version": "0.3.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "1ab6223d3670fac7143202cb6a2d43d5",
        "Requirements": [
          "cpp11",
          "systemfonts"
        ]
      },
      "tibble": {
        "Package": "tibble",
        "Version": "3.1.6",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "8a8f02d1934dfd6431c671361510dd0b",
        "Requirements": [
          "ellipsis",
          "fansi",
          "lifecycle",
          "magrittr",
          "pillar",
          "pkgconfig",
          "rlang",
          "vctrs"
        ]
      },
      "tidyr": {
        "Package": "tidyr",
        "Version": "1.1.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c8fbdbd9fcac223d6c6fe8e406f368e1",
        "Requirements": [
          "cpp11",
          "dplyr",
          "ellipsis",
          "glue",
          "lifecycle",
          "magrittr",
          "purrr",
          "rlang",
          "tibble",
          "tidyselect",
          "vctrs"
        ]
      },
      "tidyselect": {
        "Package": "tidyselect",
        "Version": "1.1.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "7243004a708d06d4716717fa1ff5b2fe",
        "Requirements": [
          "ellipsis",
          "glue",
          "purrr",
          "rlang",
          "vctrs"
        ]
      },
      "timeDate": {
        "Package": "timeDate",
        "Version": "3043.102",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "fde4fc571f5f61978652c229d4713845",
        "Requirements": []
      },
      "tinytex": {
        "Package": "tinytex",
        "Version": "0.36",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "130fe4c61e55b271a2655b3a284a205f",
        "Requirements": [
          "xfun"
        ]
      },
      "tippy": {
        "Package": "tippy",
        "Version": "0.1.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "39b1d69229e30314e7cba023c777f52d",
        "Requirements": [
          "htmltools",
          "htmlwidgets",
          "jsonlite",
          "shiny"
        ]
      },
      "tzdb": {
        "Package": "tzdb",
        "Version": "0.2.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "5e069fb033daf2317bd628d3100b75c5",
        "Requirements": [
          "cpp11"
        ]
      },
      "usethis": {
        "Package": "usethis",
        "Version": "2.1.5",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c499f488e6dd7718accffaee5bc5a79b",
        "Requirements": [
          "cli",
          "clipr",
          "crayon",
          "curl",
          "desc",
          "fs",
          "gert",
          "gh",
          "glue",
          "jsonlite",
          "lifecycle",
          "purrr",
          "rappdirs",
          "rlang",
          "rprojroot",
          "rstudioapi",
          "whisker",
          "withr",
          "yaml"
        ]
      },
      "utf8": {
        "Package": "utf8",
        "Version": "1.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c9c462b759a5cc844ae25b5942654d13",
        "Requirements": []
      },
      "vctrs": {
        "Package": "vctrs",
        "Version": "0.3.8",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ecf749a1b39ea72bd9b51b76292261f1",
        "Requirements": [
          "ellipsis",
          "glue",
          "rlang"
        ]
      },
      "viridisLite": {
        "Package": "viridisLite",
        "Version": "0.4.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "55e157e2aa88161bdb0754218470d204",
        "Requirements": []
      },
      "visR": {
        "Package": "visR",
        "Version": "0.2.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "67af4aa7b086e538578327d4587e9bf8",
        "Requirements": [
          "DT",
          "broom",
          "cowplot",
          "dplyr",
          "ggplot2",
          "gridExtra",
          "gt",
          "gtable",
          "kableExtra",
          "magrittr",
          "parcats",
          "rlang",
          "survival",
          "tidyr",
          "tidyselect"
        ]
      },
      "vroom": {
        "Package": "vroom",
        "Version": "1.5.7",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "976507b5a105bc3bdf6a5a5f29e0684f",
        "Requirements": [
          "bit64",
          "cli",
          "cpp11",
          "crayon",
          "glue",
          "hms",
          "lifecycle",
          "progress",
          "rlang",
          "tibble",
          "tidyselect",
          "tzdb",
          "vctrs",
          "withr"
        ]
      },
      "waldo": {
        "Package": "waldo",
        "Version": "0.3.1",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ad8cfff5694ac5b3c354f8f2044bd976",
        "Requirements": [
          "cli",
          "diffobj",
          "fansi",
          "glue",
          "rematch2",
          "rlang",
          "tibble"
        ]
      },
      "webshot": {
        "Package": "webshot",
        "Version": "0.5.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e99d80ad34457a4853674e89d5e806de",
        "Requirements": [
          "callr",
          "jsonlite",
          "magrittr"
        ]
      },
      "whisker": {
        "Package": "whisker",
        "Version": "0.4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "ca970b96d894e90397ed20637a0c1bbe",
        "Requirements": []
      },
      "withr": {
        "Package": "withr",
        "Version": "2.4.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "a376b424c4817cda4920bbbeb3364e85",
        "Requirements": []
      },
      "xfun": {
        "Package": "xfun",
        "Version": "0.29",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "e2e5fb1a74fbb68b27d6efc5372635dc",
        "Requirements": []
      },
      "xml2": {
        "Package": "xml2",
        "Version": "1.3.3",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "40682ed6a969ea5abfd351eb67833adc",
        "Requirements": []
      },
      "xopen": {
        "Package": "xopen",
        "Version": "1.0.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "6c85f015dee9cc7710ddd20f86881f58",
        "Requirements": [
          "processx"
        ]
      },
      "xtable": {
        "Package": "xtable",
        "Version": "1.8-4",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "b8acdf8af494d9ec19ccb2481a9b11c2",
        "Requirements": []
      },
      "yaml": {
        "Package": "yaml",
        "Version": "2.2.2",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "4597f73aad7d32c2913ec33a345f900b",
        "Requirements": []
      },
      "zip": {
        "Package": "zip",
        "Version": "2.2.0",
        "Source": "Repository",
        "Repository": "RSPM",
        "Hash": "c7eef2996ac270a18c2715c997a727c5",
        "Requirements": []
      }
    }
  }

Package: pilot2wrappers
File: renv/activate.R
Format: text
Content:
  
  local({
  
    # the requested version of renv
    version <- "0.15.2"
  
    # the project directory
    project <- getwd()
  
    # figure out whether the autoloader is enabled
    enabled <- local({
  
      # first, check config option
      override <- getOption("renv.config.autoloader.enabled")
      if (!is.null(override))
        return(override)
  
      # next, check environment variables
      # TODO: prefer using the configuration one in the future
      envvars <- c(
        "RENV_CONFIG_AUTOLOADER_ENABLED",
        "RENV_AUTOLOADER_ENABLED",
        "RENV_ACTIVATE_PROJECT"
      )
  
      for (envvar in envvars) {
        envval <- Sys.getenv(envvar, unset = NA)
        if (!is.na(envval))
          return(tolower(envval) %in% c("true", "t", "1"))
      }
  
      # enable by default
      TRUE
  
    })
  
    if (!enabled)
      return(FALSE)
  
    # avoid recursion
    if (identical(getOption("renv.autoloader.running"), TRUE)) {
      warning("ignoring recursive attempt to run renv autoloader")
      return(invisible(TRUE))
    }
  
    # signal that we're loading renv during R startup
    options(renv.autoloader.running = TRUE)
    on.exit(options(renv.autoloader.running = NULL), add = TRUE)
  
    # signal that we've consented to use renv
    options(renv.consent = TRUE)
  
    # load the 'utils' package eagerly -- this ensures that renv shims, which
    # mask 'utils' packages, will come first on the search path
    library(utils, lib.loc = .Library)
  
    # check to see if renv has already been loaded
    if ("renv" %in% loadedNamespaces()) {
  
      # if renv has already been loaded, and it's the requested version of renv,
      # nothing to do
      spec <- .getNamespaceInfo(.getNamespace("renv"), "spec")
      if (identical(spec[["version"]], version))
        return(invisible(TRUE))
  
      # otherwise, unload and attempt to load the correct version of renv
      unloadNamespace("renv")
  
    }
  
    # load bootstrap tools   
    `%||%` <- function(x, y) {
      if (is.environment(x) || length(x)) x else y
    }
    
    bootstrap <- function(version, library) {
    
      # attempt to download renv
      tarball <- tryCatch(renv_bootstrap_download(version), error = identity)
      if (inherits(tarball, "error"))
        stop("failed to download renv ", version)
    
      # now attempt to install
      status <- tryCatch(renv_bootstrap_install(version, tarball, library), error = identity)
      if (inherits(status, "error"))
        stop("failed to install renv ", version)
    
    }
    
    renv_bootstrap_tests_running <- function() {
      getOption("renv.tests.running", default = FALSE)
    }
    
    renv_bootstrap_repos <- function() {
    
      # check for repos override
      repos <- Sys.getenv("RENV_CONFIG_REPOS_OVERRIDE", unset = NA)
      if (!is.na(repos))
        return(repos)
    
      # check for lockfile repositories
      repos <- tryCatch(renv_bootstrap_repos_lockfile(), error = identity)
      if (!inherits(repos, "error") && length(repos))
        return(repos)
    
      # if we're testing, re-use the test repositories
      if (renv_bootstrap_tests_running())
        return(getOption("renv.tests.repos"))
    
      # retrieve current repos
      repos <- getOption("repos")
    
      # ensure @CRAN@ entries are resolved
      repos[repos == "@CRAN@"] <- getOption(
        "renv.repos.cran",
        "https://cloud.r-project.org"
      )
    
      # add in renv.bootstrap.repos if set
      default <- c(FALLBACK = "https://cloud.r-project.org")
      extra <- getOption("renv.bootstrap.repos", default = default)
      repos <- c(repos, extra)
    
      # remove duplicates that might've snuck in
      dupes <- duplicated(repos) | duplicated(names(repos))
      repos[!dupes]
    
    }
    
    renv_bootstrap_repos_lockfile <- function() {
    
      lockpath <- Sys.getenv("RENV_PATHS_LOCKFILE", unset = "renv.lock")
      if (!file.exists(lockpath))
        return(NULL)
    
      lockfile <- tryCatch(renv_json_read(lockpath), error = identity)
      if (inherits(lockfile, "error")) {
        warning(lockfile)
        return(NULL)
      }
    
      repos <- lockfile$R$Repositories
      if (length(repos) == 0)
        return(NULL)
    
      keys <- vapply(repos, `[[`, "Name", FUN.VALUE = character(1))
      vals <- vapply(repos, `[[`, "URL", FUN.VALUE = character(1))
      names(vals) <- keys
    
      return(vals)
    
    }
    
    renv_bootstrap_download <- function(version) {
    
      # if the renv version number has 4 components, assume it must
      # be retrieved via github
      nv <- numeric_version(version)
      components <- unclass(nv)[[1]]
    
      methods <- if (length(components) == 4L) {
        list(
          renv_bootstrap_download_github
        )
      } else {
        list(
          renv_bootstrap_download_cran_latest,
          renv_bootstrap_download_cran_archive
        )
      }
    
      for (method in methods) {
        path <- tryCatch(method(version), error = identity)
        if (is.character(path) && file.exists(path))
          return(path)
      }
    
      stop("failed to download renv ", version)
    
    }
    
    renv_bootstrap_download_impl <- function(url, destfile) {
    
      mode <- "wb"
    
      # https://bugs.r-project.org/bugzilla/show_bug.cgi?id=17715
      fixup <-
        Sys.info()[["sysname"]] == "Windows" &&
        substring(url, 1L, 5L) == "file:"
    
      if (fixup)
        mode <- "w+b"
    
      utils::download.file(
        url      = url,
        destfile = destfile,
        mode     = mode,
        quiet    = TRUE
      )
    
    }
    
    renv_bootstrap_download_cran_latest <- function(version) {
    
      spec <- renv_bootstrap_download_cran_latest_find(version)
    
      message("* Downloading renv ", version, " ... ", appendLF = FALSE)
    
      type  <- spec$type
      repos <- spec$repos
    
      info <- tryCatch(
        utils::download.packages(
          pkgs    = "renv",
          destdir = tempdir(),
          repos   = repos,
          type    = type,
          quiet   = TRUE
        ),
        condition = identity
      )
    
      if (inherits(info, "condition")) {
        message("FAILED")
        return(FALSE)
      }
    
      # report success and return
      message("OK (downloaded ", type, ")")
      info[1, 2]
    
    }
    
    renv_bootstrap_download_cran_latest_find <- function(version) {
    
      # check whether binaries are supported on this system
      binary <-
        getOption("renv.bootstrap.binary", default = TRUE) &&
        !identical(.Platform$pkgType, "source") &&
        !identical(getOption("pkgType"), "source") &&
        Sys.info()[["sysname"]] %in% c("Darwin", "Windows")
    
      types <- c(if (binary) "binary", "source")
    
      # iterate over types + repositories
      for (type in types) {
        for (repos in renv_bootstrap_repos()) {
    
          # retrieve package database
          db <- tryCatch(
            as.data.frame(
              utils::available.packages(type = type, repos = repos),
              stringsAsFactors = FALSE
            ),
            error = identity
          )
    
          if (inherits(db, "error"))
            next
    
          # check for compatible entry
          entry <- db[db$Package %in% "renv" & db$Version %in% version, ]
          if (nrow(entry) == 0)
            next
    
          # found it; return spec to caller
          spec <- list(entry = entry, type = type, repos = repos)
          return(spec)
    
        }
      }
    
      # if we got here, we failed to find renv
      fmt <- "renv %s is not available from your declared package repositories"
      stop(sprintf(fmt, version))
    
    }
    
    renv_bootstrap_download_cran_archive <- function(version) {
    
      name <- sprintf("renv_%s.tar.gz", version)
      repos <- renv_bootstrap_repos()
      urls <- file.path(repos, "src/contrib/Archive/renv", name)
      destfile <- file.path(tempdir(), name)
    
      message("* Downloading renv ", version, " ... ", appendLF = FALSE)
    
      for (url in urls) {
    
        status <- tryCatch(
          renv_bootstrap_download_impl(url, destfile),
          condition = identity
        )
    
        if (identical(status, 0L)) {
          message("OK")
          return(destfile)
        }
    
      }
    
      message("FAILED")
      return(FALSE)
    
    }
    
    renv_bootstrap_download_github <- function(version) {
    
      enabled <- Sys.getenv("RENV_BOOTSTRAP_FROM_GITHUB", unset = "TRUE")
      if (!identical(enabled, "TRUE"))
        return(FALSE)
    
      # prepare download options
      pat <- Sys.getenv("GITHUB_PAT")
      if (nzchar(Sys.which("curl")) && nzchar(pat)) {
        fmt <- "--location --fail --header \"Authorization: token %s\""
        extra <- sprintf(fmt, pat)
        saved <- options("download.file.method", "download.file.extra")
        options(download.file.method = "curl", download.file.extra = extra)
        on.exit(do.call(base::options, saved), add = TRUE)
      } else if (nzchar(Sys.which("wget")) && nzchar(pat)) {
        fmt <- "--header=\"Authorization: token %s\""
        extra <- sprintf(fmt, pat)
        saved <- options("download.file.method", "download.file.extra")
        options(download.file.method = "wget", download.file.extra = extra)
        on.exit(do.call(base::options, saved), add = TRUE)
      }
    
      message("* Downloading renv ", version, " from GitHub ... ", appendLF = FALSE)
    
      url <- file.path("https://api.github.com/repos/rstudio/renv/tarball", version)
      name <- sprintf("renv_%s.tar.gz", version)
      destfile <- file.path(tempdir(), name)
    
      status <- tryCatch(
        renv_bootstrap_download_impl(url, destfile),
        condition = identity
      )
    
      if (!identical(status, 0L)) {
        message("FAILED")
        return(FALSE)
      }
    
      message("OK")
      return(destfile)
    
    }
    
    renv_bootstrap_install <- function(version, tarball, library) {
    
      # attempt to install it into project library
      message("* Installing renv ", version, " ... ", appendLF = FALSE)
      dir.create(library, showWarnings = FALSE, recursive = TRUE)
    
      # invoke using system2 so we can capture and report output
      bin <- R.home("bin")
      exe <- if (Sys.info()[["sysname"]] == "Windows") "R.exe" else "R"
      r <- file.path(bin, exe)
      args <- c("--vanilla", "CMD", "INSTALL", "--no-multiarch", "-l", shQuote(library), shQuote(tarball))
      output <- system2(r, args, stdout = TRUE, stderr = TRUE)
      message("Done!")
    
      # check for successful install
      status <- attr(output, "status")
      if (is.numeric(status) && !identical(status, 0L)) {
        header <- "Error installing renv:"
        lines <- paste(rep.int("=", nchar(header)), collapse = "")
        text <- c(header, lines, output)
        writeLines(text, con = stderr())
      }
    
      status
    
    }
    
    renv_bootstrap_platform_prefix <- function() {
    
      # construct version prefix
      version <- paste(R.version$major, R.version$minor, sep = ".")
      prefix <- paste("R", numeric_version(version)[1, 1:2], sep = "-")
    
      # include SVN revision for development versions of R
      # (to avoid sharing platform-specific artefacts with released versions of R)
      devel <-
        identical(R.version[["status"]],   "Under development (unstable)") ||
        identical(R.version[["nickname"]], "Unsuffered Consequences")
    
      if (devel)
        prefix <- paste(prefix, R.version[["svn rev"]], sep = "-r")
    
      # build list of path components
      components <- c(prefix, R.version$platform)
    
      # include prefix if provided by user
      prefix <- renv_bootstrap_platform_prefix_impl()
      if (!is.na(prefix) && nzchar(prefix))
        components <- c(prefix, components)
    
      # build prefix
      paste(components, collapse = "/")
    
    }
    
    renv_bootstrap_platform_prefix_impl <- function() {
    
      # if an explicit prefix has been supplied, use it
      prefix <- Sys.getenv("RENV_PATHS_PREFIX", unset = NA)
      if (!is.na(prefix))
        return(prefix)
    
      # if the user has requested an automatic prefix, generate it
      auto <- Sys.getenv("RENV_PATHS_PREFIX_AUTO", unset = NA)
      if (auto %in% c("TRUE", "True", "true", "1"))
        return(renv_bootstrap_platform_prefix_auto())
    
      # empty string on failure
      ""
    
    }
    
    renv_bootstrap_platform_prefix_auto <- function() {
    
      prefix <- tryCatch(renv_bootstrap_platform_os(), error = identity)
      if (inherits(prefix, "error") || prefix %in% "unknown") {
    
        msg <- paste(
          "failed to infer current operating system",
          "please file a bug report at https://github.com/rstudio/renv/issues",
          sep = "; "
        )
    
        warning(msg)
    
      }
    
      prefix
    
    }
    
    renv_bootstrap_platform_os <- function() {
    
      sysinfo <- Sys.info()
      sysname <- sysinfo[["sysname"]]
    
      # handle Windows + macOS up front
      if (sysname == "Windows")
        return("windows")
      else if (sysname == "Darwin")
        return("macos")
    
      # check for os-release files
      for (file in c("/etc/os-release", "/usr/lib/os-release"))
        if (file.exists(file))
          return(renv_bootstrap_platform_os_via_os_release(file, sysinfo))
    
      # check for redhat-release files
      if (file.exists("/etc/redhat-release"))
        return(renv_bootstrap_platform_os_via_redhat_release())
    
      "unknown"
    
    }
    
    renv_bootstrap_platform_os_via_os_release <- function(file, sysinfo) {
    
      # read /etc/os-release
      release <- utils::read.table(
        file             = file,
        sep              = "=",
        quote            = c("\"", "'"),
        col.names        = c("Key", "Value"),
        comment.char     = "#",
        stringsAsFactors = FALSE
      )
    
      vars <- as.list(release$Value)
      names(vars) <- release$Key
    
      # get os name
      os <- tolower(sysinfo[["sysname"]])
    
      # read id
      id <- "unknown"
      for (field in c("ID", "ID_LIKE")) {
        if (field %in% names(vars) && nzchar(vars[[field]])) {
          id <- vars[[field]]
          break
        }
      }
    
      # read version
      version <- "unknown"
      for (field in c("UBUNTU_CODENAME", "VERSION_CODENAME", "VERSION_ID", "BUILD_ID")) {
        if (field %in% names(vars) && nzchar(vars[[field]])) {
          version <- vars[[field]]
          break
        }
      }
    
      # join together
      paste(c(os, id, version), collapse = "-")
    
    }
    
    renv_bootstrap_platform_os_via_redhat_release <- function() {
    
      # read /etc/redhat-release
      contents <- readLines("/etc/redhat-release", warn = FALSE)
    
      # infer id
      id <- if (grepl("centos", contents, ignore.case = TRUE))
        "centos"
      else if (grepl("redhat", contents, ignore.case = TRUE))
        "redhat"
      else
        "unknown"
    
      # try to find a version component (very hacky)
      version <- "unknown"
    
      parts <- strsplit(contents, "[[:space:]]")[[1L]]
      for (part in parts) {
    
        nv <- tryCatch(numeric_version(part), error = identity)
        if (inherits(nv, "error"))
          next
    
        version <- nv[1, 1]
        break
    
      }
    
      paste(c("linux", id, version), collapse = "-")
    
    }
    
    renv_bootstrap_library_root_name <- function(project) {
    
      # use project name as-is if requested
      asis <- Sys.getenv("RENV_PATHS_LIBRARY_ROOT_ASIS", unset = "FALSE")
      if (asis)
        return(basename(project))
    
      # otherwise, disambiguate based on project's path
      id <- substring(renv_bootstrap_hash_text(project), 1L, 8L)
      paste(basename(project), id, sep = "-")
    
    }
    
    renv_bootstrap_library_root <- function(project) {
    
      prefix <- renv_bootstrap_profile_prefix()
    
      path <- Sys.getenv("RENV_PATHS_LIBRARY", unset = NA)
      if (!is.na(path))
        return(paste(c(path, prefix), collapse = "/"))
    
      path <- renv_bootstrap_library_root_impl(project)
      if (!is.null(path)) {
        name <- renv_bootstrap_library_root_name(project)
        return(paste(c(path, prefix, name), collapse = "/"))
      }
    
      renv_bootstrap_paths_renv("library", project = project)
    
    }
    
    renv_bootstrap_library_root_impl <- function(project) {
    
      root <- Sys.getenv("RENV_PATHS_LIBRARY_ROOT", unset = NA)
      if (!is.na(root))
        return(root)
    
      type <- renv_bootstrap_project_type(project)
      if (identical(type, "package")) {
        userdir <- renv_bootstrap_user_dir()
        return(file.path(userdir, "library"))
      }
    
    }
    
    renv_bootstrap_validate_version <- function(version) {
    
      loadedversion <- utils::packageDescription("renv", fields = "Version")
      if (version == loadedversion)
        return(TRUE)
    
      # assume four-component versions are from GitHub; three-component
      # versions are from CRAN
      components <- strsplit(loadedversion, "[.-]")[[1]]
      remote <- if (length(components) == 4L)
        paste("rstudio/renv", loadedversion, sep = "@")
      else
        paste("renv", loadedversion, sep = "@")
    
      fmt <- paste(
        "renv %1$s was loaded from project library, but this project is configured to use renv %2$s.",
        "Use `renv::record(\"%3$s\")` to record renv %1$s in the lockfile.",
        "Use `renv::restore(packages = \"renv\")` to install renv %2$s into the project library.",
        sep = "\n"
      )
    
      msg <- sprintf(fmt, loadedversion, version, remote)
      warning(msg, call. = FALSE)
    
      FALSE
    
    }
    
    renv_bootstrap_hash_text <- function(text) {
    
      hashfile <- tempfile("renv-hash-")
      on.exit(unlink(hashfile), add = TRUE)
    
      writeLines(text, con = hashfile)
      tools::md5sum(hashfile)
    
    }
    
    renv_bootstrap_load <- function(project, libpath, version) {
    
      # try to load renv from the project library
      if (!requireNamespace("renv", lib.loc = libpath, quietly = TRUE))
        return(FALSE)
    
      # warn if the version of renv loaded does not match
      renv_bootstrap_validate_version(version)
    
      # load the project
      renv::load(project)
    
      TRUE
    
    }
    
    renv_bootstrap_profile_load <- function(project) {
    
      # if RENV_PROFILE is already set, just use that
      profile <- Sys.getenv("RENV_PROFILE", unset = NA)
      if (!is.na(profile) && nzchar(profile))
        return(profile)
    
      # check for a profile file (nothing to do if it doesn't exist)
      path <- renv_bootstrap_paths_renv("profile", profile = FALSE)
      if (!file.exists(path))
        return(NULL)
    
      # read the profile, and set it if it exists
      contents <- readLines(path, warn = FALSE)
      if (length(contents) == 0L)
        return(NULL)
    
      # set RENV_PROFILE
      profile <- contents[[1L]]
      if (!profile %in% c("", "default"))
        Sys.setenv(RENV_PROFILE = profile)
    
      profile
    
    }
    
    renv_bootstrap_profile_prefix <- function() {
      profile <- renv_bootstrap_profile_get()
      if (!is.null(profile))
        return(file.path("profiles", profile, "renv"))
    }
    
    renv_bootstrap_profile_get <- function() {
      profile <- Sys.getenv("RENV_PROFILE", unset = "")
      renv_bootstrap_profile_normalize(profile)
    }
    
    renv_bootstrap_profile_set <- function(profile) {
      profile <- renv_bootstrap_profile_normalize(profile)
      if (is.null(profile))
        Sys.unsetenv("RENV_PROFILE")
      else
        Sys.setenv(RENV_PROFILE = profile)
    }
    
    renv_bootstrap_profile_normalize <- function(profile) {
    
      if (is.null(profile) || profile %in% c("", "default"))
        return(NULL)
    
      profile
    
    }
    
    renv_bootstrap_path_absolute <- function(path) {
    
      substr(path, 1L, 1L) %in% c("~", "/", "\\") || (
        substr(path, 1L, 1L) %in% c(letters, LETTERS) &&
        substr(path, 2L, 3L) %in% c(":/", ":\\")
      )
    
    }
    
    renv_bootstrap_paths_renv <- function(..., profile = TRUE, project = NULL) {
      renv <- Sys.getenv("RENV_PATHS_RENV", unset = "renv")
      root <- if (renv_bootstrap_path_absolute(renv)) NULL else project
      prefix <- if (profile) renv_bootstrap_profile_prefix()
      components <- c(root, renv, prefix, ...)
      paste(components, collapse = "/")
    }
    
    renv_bootstrap_project_type <- function(path) {
    
      descpath <- file.path(path, "DESCRIPTION")
      if (!file.exists(descpath))
        return("unknown")
    
      desc <- tryCatch(
        read.dcf(descpath, all = TRUE),
        error = identity
      )
    
      if (inherits(desc, "error"))
        return("unknown")
    
      type <- desc$Type
      if (!is.null(type))
        return(tolower(type))
    
      package <- desc$Package
      if (!is.null(package))
        return("package")
    
      "unknown"
    
    }
    
    renv_bootstrap_user_dir <- function(path) {
      dir <- renv_bootstrap_user_dir_impl(path)
      chartr("\\", "/", dir)
    }
    
    renv_bootstrap_user_dir_impl <- function(path) {
    
      # use R_user_dir if available
      tools <- asNamespace("tools")
      if (is.function(tools$R_user_dir))
        return(tools$R_user_dir("renv", "cache"))
    
      # try using our own backfill for older versions of R
      envvars <- c("R_USER_CACHE_DIR", "XDG_CACHE_HOME")
      for (envvar in envvars) {
        root <- Sys.getenv(envvar, unset = NA)
        if (!is.na(root)) {
          path <- file.path(root, "R/renv")
          return(path)
        }
      }
    
      # use platform-specific default fallbacks
      if (Sys.info()[["sysname"]] == "Windows")
        file.path(Sys.getenv("LOCALAPPDATA"), "R/cache/R/renv")
      else if (Sys.info()[["sysname"]] == "Darwin")
        "~/Library/Caches/org.R-project.R/R/renv"
      else
        "~/.cache/R/renv"
    
    }
    
    renv_json_read <- function(file = NULL, text = NULL) {
    
      text <- paste(text %||% read(file), collapse = "\n")
    
      # find strings in the JSON
      pattern <- '["](?:(?:\\\\.)|(?:[^"\\\\]))*?["]'
      locs <- gregexpr(pattern, text)[[1]]
    
      # if any are found, replace them with placeholders
      replaced <- text
      strings <- character()
      replacements <- character()
    
      if (!identical(c(locs), -1L)) {
    
        # get the string values
        starts <- locs
        ends <- locs + attr(locs, "match.length") - 1L
        strings <- substring(text, starts, ends)
    
        # only keep those requiring escaping
        strings <- grep("[[\\]{}:]", strings, perl = TRUE, value = TRUE)
    
        # compute replacements
        replacements <- sprintf('"\032%i\032"', seq_along(strings))
    
        # replace the strings
        mapply(function(string, replacement) {
          replaced <<- sub(string, replacement, replaced, fixed = TRUE)
        }, strings, replacements)
    
      }
    
      # transform the JSON into something the R parser understands
      transformed <- replaced
      transformed <- gsub("[[{]", "list(", transformed)
      transformed <- gsub("[]}]", ")", transformed)
      transformed <- gsub(":", "=", transformed, fixed = TRUE)
      text <- paste(transformed, collapse = "\n")
    
      # parse it
      json <- parse(text = text, keep.source = FALSE, srcfile = NULL)[[1L]]
    
      # construct map between source strings, replaced strings
      map <- as.character(parse(text = strings))
      names(map) <- as.character(parse(text = replacements))
    
      # convert to list
      map <- as.list(map)
    
      # remap strings in object
      remapped <- renv_json_remap(json, map)
    
      # evaluate
      eval(remapped, envir = baseenv())
    
    }
    
    renv_json_remap <- function(json, map) {
    
      # fix names
      if (!is.null(names(json))) {
        lhs <- match(names(json), names(map), nomatch = 0L)
        rhs <- match(names(map), names(json), nomatch = 0L)
        names(json)[rhs] <- map[lhs]
      }
    
      # fix values
      if (is.character(json))
        return(map[[json]] %||% json)
    
      # handle true, false, null
      if (is.name(json)) {
        text <- as.character(json)
        if (text == "true")
          return(TRUE)
        else if (text == "false")
          return(FALSE)
        else if (text == "null")
          return(NULL)
      }
    
      # recurse
      if (is.recursive(json)) {
        for (i in seq_along(json)) {
          json[i] <- list(renv_json_remap(json[[i]], map))
        }
      }
    
      json
    
    }
  
    # load the renv profile, if any
    renv_bootstrap_profile_load(project)
  
    # construct path to library root
    root <- renv_bootstrap_library_root(project)
  
    # construct library prefix for platform
    prefix <- renv_bootstrap_platform_prefix()
  
    # construct full libpath
    libpath <- file.path(root, prefix)
  
    # attempt to load
    if (renv_bootstrap_load(project, libpath, version))
      return(TRUE)
  
    # load failed; inform user we're about to bootstrap
    prefix <- paste("# Bootstrapping renv", version)
    postfix <- paste(rep.int("-", 77L - nchar(prefix)), collapse = "")
    header <- paste(prefix, postfix)
    message(header)
  
    # perform bootstrap
    bootstrap(version, libpath)
  
    # exit early if we're just testing bootstrap
    if (!is.na(Sys.getenv("RENV_BOOTSTRAP_INSTALL_ONLY", unset = NA)))
      return(TRUE)
  
    # try again to load
    if (requireNamespace("renv", lib.loc = libpath, quietly = TRUE)) {
      message("* Successfully installed and loaded renv ", version, ".")
      return(renv::load())
    }
  
    # failed to download or load renv; warn the user
    msg <- c(
      "Failed to find an renv installation: the project will not be loaded.",
      "Use `renv::activate()` to re-initialize the project."
    )
  
    warning(paste(msg, collapse = "\n"), call. = FALSE)
  
  })

Package: pilot2wrappers
File: dev/01_start.R
Format: text
Content:
  # Building a Prod-Ready, Robust Shiny Application.
  # 
  # README: each step of the dev files is optional, and you don't have to 
  # fill every dev scripts before getting started. 
  # 01_start.R should be filled at start. 
  # 02_dev.R should be used to keep track of your development during the project.
  # 03_deploy.R should be used once you need to deploy your app.
  # 
  # 
  ########################################
  #### CURRENT FILE: ON START SCRIPT #####
  ########################################
  
  ## Fill the DESCRIPTION ----
  ## Add meta data about your application
  ## 
  ## /!\ Note: if you want to change the name of your app during development, 
  ## either re-run this function, call golem::set_golem_name(), or don't forget
  ## to change the name in the app_sys() function in app_config.R /!\
  ## 
  golem::fill_desc(
    pkg_name = "pilot2wrappers", # The Name of the package containing the App 
    pkg_title = "PKG_TITLE", # The Title of the package containing the App 
    pkg_description = "PKG_DESC.", # The Description of the package containing the App 
    author_first_name = "AUTHOR_FIRST", # Your First Name
    author_last_name = "AUTHOR_LAST", # Your Last Name
    author_email = "AUTHOR@MAIL.COM", # Your Email
    repo_url = NULL # The URL of the GitHub Repo (optional) 
  )     
  
  ## Set {golem} options ----
  golem::set_golem_options()
  
  ## Create Common Files ----
  ## See ?usethis for more information
  usethis::use_mit_license( "Golem User" )  # You can set another license here
  usethis::use_readme_rmd( open = FALSE )
  usethis::use_code_of_conduct()
  usethis::use_lifecycle_badge( "Experimental" )
  usethis::use_news_md( open = FALSE )
  
  ## Use git ----
  usethis::use_git()
  
  ## Init Testing Infrastructure ----
  ## Create a template for tests
  golem::use_recommended_tests()
  
  ## Use Recommended Packages ----
  golem::use_recommended_deps()
  
  ## Favicon ----
  # If you want to change the favicon (default is golem's one)
  golem::use_favicon() # path = "path/to/ico". Can be an online file. 
  golem::remove_favicon()
  
  ## Add helper functions ----
  golem::use_utils_ui()
  golem::use_utils_server()
  
  # You're now set! ----
  
  # go to dev/02_dev.R
  rstudioapi::navigateToFile( "dev/02_dev.R" )
  

Package: pilot2wrappers
File: dev/02_dev.R
Format: text
Content:
  # Building a Prod-Ready, Robust Shiny Application.
  # 
  # README: each step of the dev files is optional, and you don't have to 
  # fill every dev scripts before getting started. 
  # 01_start.R should be filled at start. 
  # 02_dev.R should be used to keep track of your development during the project.
  # 03_deploy.R should be used once you need to deploy your app.
  # 
  # 
  ###################################
  #### CURRENT FILE: DEV SCRIPT #####
  ###################################
  
  # Engineering
  
  ## Dependencies ----
  ## Add one line by package you want to add as dependency
  pkg_list <- c(
    "teal",
    "teal.data",
    "rtables",
    "haven",
    "dplyr",
    "Tplyr",
    "tidyr",
    "glue",
    "stringr",
    "huxtable",
    "ggplot2",
    "cowplot",
    "visR",
    "emmeans",
    "reactable",
    "tibble",
    "utils",
    "htmltools",
    "tippy"
  )
  
  purrr::map(pkg_list, ~usethis::use_package(.x))
  
  
  ## Add modules ----
  ## Create a module infrastructure in R/
  golem::add_module( name = "name_of_module1" ) # Name of the module
  golem::add_module( name = "name_of_module2" ) # Name of the module
  
  ## Add helper functions ----
  ## Creates fct_* and utils_*
  golem::add_fct( "helpers" ) 
  golem::add_utils( "helpers" )
  
  ## External resources
  ## Creates .js and .css files at inst/app/www
  golem::add_js_file( "script" )
  golem::add_js_handler( "handlers" )
  golem::add_css_file( "custom" )
  
  ## Add internal datasets ----
  ## If you have data in your package
  usethis::use_data_raw( name = "my_dataset", open = FALSE ) 
  
  ## Tests ----
  ## Add one line by test you want to create
  usethis::use_test( "app" )
  
  # Documentation
  
  ## Vignette ----
  usethis::use_vignette("pilot2wrappers")
  devtools::build_vignettes()
  
  ## Code Coverage----
  ## Set the code coverage service ("codecov" or "coveralls")
  usethis::use_coverage()
  
  # Create a summary readme for the testthat subdirectory
  covrpage::covrpage()
  
  ## CI ----
  ## Use this part of the script if you need to set up a CI
  ## service for your application
  ## 
  ## (You'll need GitHub there)
  usethis::use_github()
  
  # GitHub Actions
  usethis::use_github_action() 
  # Chose one of the three
  # See https://usethis.r-lib.org/reference/use_github_action.html
  usethis::use_github_action_check_release() 
  usethis::use_github_action_check_standard() 
  usethis::use_github_action_check_full() 
  # Add action for PR
  usethis::use_github_action_pr_commands()
  
  # Travis CI
  usethis::use_travis() 
  usethis::use_travis_badge() 
  
  # AppVeyor 
  usethis::use_appveyor() 
  usethis::use_appveyor_badge()
  
  # Circle CI
  usethis::use_circleci()
  usethis::use_circleci_badge()
  
  # Jenkins
  usethis::use_jenkins()
  
  # GitLab CI
  usethis::use_gitlab_ci()
  
  # You're now set! ----
  # go to dev/03_deploy.R
  rstudioapi::navigateToFile("dev/03_deploy.R")
  

Package: pilot2wrappers
File: dev/03_deploy.R
Format: text
Content:
  # Building a Prod-Ready, Robust Shiny Application.
  # 
  # README: each step of the dev files is optional, and you don't have to 
  # fill every dev scripts before getting started. 
  # 01_start.R should be filled at start. 
  # 02_dev.R should be used to keep track of your development during the project.
  # 03_deploy.R should be used once you need to deploy your app.
  # 
  # 
  ######################################
  #### CURRENT FILE: DEPLOY SCRIPT #####
  ######################################
  
  # Test your app
  
  ## Run checks ----
  ## Check the package before sending to prod
  devtools::check()
  
  # Deploy
  
  ## Local, CRAN or Package Manager ---- 
  ## This will build a tar.gz that can be installed locally, 
  ## sent to CRAN, or to a package manager
  devtools::build()
  
  ## RStudio ----
  ## If you want to deploy on RStudio related platforms
  golem::add_shinyappsio_file()
  
  ## Docker ----
  ## If you want to deploy via a generic Dockerfile
  #golem::add_dockerfile()
  

Package: pilot2wrappers
File: dev/run_dev.R
Format: text
Content:
  # Set options here
  options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
  
  # Detach all loaded packages and clean your environment
  golem::detach_all_attached()
  # rm(list=ls(all.names = TRUE))
  
  # Document and reload your package
  golem::document_and_reload()
  
  # Run the application
  run_app()

